<?php
// $Id$

/**
 *  @file
 *  Provides the jquery meerkat plugin functionality for nodes.
 */

/**
 * Implementation of hook_menu().
 */
function meerkatnode_menu() {
  $items = array();

  $items['admin/settings/meerkat/meerkatnode'] = array(
    'title' => 'Meerkat Node',
    'description' => 'Administer meerkat node settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('meerkatnode_admin_settings'),
    'access arguments' => array('administer meerkat'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * The meerkat node admin settings form.
 */
function meerkatnode_admin_settings() {
  $types = node_get_types('names');

  $form['meerkatnode_types'] = array(
    '#type' => 'checkboxes',
    '#required' => TRUE,
    '#title' => t('Meerkat Content Types'),
    '#options' => $types,
    '#description' => t('Please select which content types to enable meerkat node functionality on.'),
    '#default_value' => meerkatnode_types(),
  );

  return system_settings_form($form);
}

/**
 * Returns the node types configured for meerkat node functionality.
 */
function meerkatnode_types() {
  $default = array();

  $types = node_get_types('names');

  $selectedtypes = array_filter(variable_get('meerkatnode_types', $default));

  $validtypes = array();

  if ( is_array($selectedtypes) ) {
    foreach ( $selectedtypes as $selectedtype ) {
      if ( isset($types[$selectedtype]) ) {
        $validtypes[] = $selectedtype;
      }
    }
  }

  return $validtypes;
}

/**
 * Implementation of hook_form_alter().
 */
function meerkatnode_form_alter(&$form, $form_state, $form_id) {
  if ( strstr($form_id, '_node_form') ) {
    $node = $form['#node'];

    if ( is_object($node) ) {
      $types = meerkatnode_types();

      if ( in_array($node->type, $types) ) {
        _meerkatnode_form($form);
      }
    }
  }
}

/**
 * Injects the meerkat node form.
 */
function _meerkatnode_form(&$form) {
  $node = $form['#node'];

  $form['meerkatnode'] = array(
    '#tree' => TRUE,
    '#type' => 'fieldset',
    '#title' => t('Meerkat'),
    '#collapsed' => FALSE,
    '#collapsible' => TRUE,
  );

  $content = '';

  if ( isset($node->meerkatnode['content']) ) {
    $content = $node->meerkatnode['content'];
  }

  $form['meerkatnode']['content'] = array(
    '#type' => 'textarea',
    '#title' => t('Meerkat Content'),
    '#description' => t('Please enter the content to display in the meerkat container.'),
    '#default_value' => $node->meerkatnode['content'],
  );

  $format = '';

  if ( isset($node->meerkatnode['format']) ) {
    $format = $node->meerkatnode['format'];
  }

  $form['meerkatnode']['format'] = filter_form($format, NULL, array('meerkatnode', 'format'));

  $options = meerkat_defaultsoptions();

  if ( count($options) == 0 ) {
    $form['meerkatnode']['defaults'] = array(
      '#type' => 'value',
      '#value' => '',
    );
  }
  else {
    $form['meerkatnode']['defaults'] = array(
      '#type' => 'select',
      '#title' => t('Defaults'),
      '#options' => $options,
      '#description' => t('Please select which meerkat defaults to use.'),
      '#default_value' => $node->meerkatnode['defaults'],
    );
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function meerkatnode_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  $types = meerkatnode_types();

  if ( in_array($node->type, $types) ) {
    switch ( $op ) {
      case 'insert' :
        _meerkatnode_insert($node);

        break;
      case 'load' :
        _meerkatnode_load($node);

        break;
      case 'update' :
        _meerkatnode_update($node);

        break;
      case 'delete' :
        _meerkatnode_delete($node);

        break;
      case 'delete revision' :
        _meerkatnode_deleterevision($node);

        break;
      case 'view' :
        _meerkatnode_view($node);

        break;
    }
  }
}

/**
 * Stores the meerkat node data.
 */
function _meerkatnode_insert(&$node) {
  $sql = "INSERT INTO {meerkatnode}(nid, vid, data) VALUES(%d, %d, '%s')";

  db_query($sql, $node->nid, $node->vid, serialize($node->meerkatnode));
}

/**
 * Loads the meerkat node data.
 */
function _meerkatnode_load(&$node) {
  $sql = "SELECT data FROM {meerkatnode} WHERE vid = %d";

  $result = db_query($sql, $node->vid);

  if ( $result ) {
    while ( $row = db_fetch_array($result) ) {
      $node->meerkatnode = unserialize($row['data']);
    }
  }
}

/**
 * Updates the meerkat node data.
 */
function _meerkatnode_update(&$node) {
  $sql = "UPDATE {meerkatnode} SET data = '%s' WHERE vid = %d";

  $result = db_query($sql, serialize($node->meerkatnode), $node->vid);

  if ( db_affected_rows() == 0 ) {
    _meerkatnode_insert($node);
  }
}

/**
 * Deletes the meerkat node data for a entire node.
 */
function _meerkatnode_delete(&$node) {
  $sql = "DELETE FROM {meerkatnode} WHERE nid = %d";

  db_query($sql, $node->nid);
}

/**
 * Deletes the meerkat node data for a node revision.
 */
function _meerkatnode_deleterevision(&$node) {
  $sql = "DELETE FROM {meerkatnode} WHERE vid = %d";

  db_query($sql, $node->vid);
}

/**
 * Outputs the meerkat node data.
 */
function _meerkatnode_view(&$node) {
  if ( arg(0) == 'node' && arg(1) == $node->nid && $node->meerkatnode['content'] != '' ) {
    $content = check_markup($node->meerkatnode['content'], $node->meerkatnode['format']);

    meerkat_create($content, $node->meerkatnode['defaults']);
  }
}